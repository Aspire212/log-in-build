{"version":3,"sources":["components/Auth/index.tsx","requests/request.ts","components/Log/index.tsx","components/App/index.tsx","index.tsx"],"names":["Auth","signIn","authKey","setAuthKey","validate","yup","shape","email","matches","password","min","checkUser","clientId","className","initialValues","onSubmit","values","setTimeout","validationSchema","errors","touched","handleChange","handleBlur","isValid","dirty","handleSubmit","name","type","onChange","onBlur","value","placeholder","disabled","onClick","setKey","bodyOption","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","server","data","tokenType","accessToken","catch","error","console","log","signOut","initUserData","id","Log","useState","userData","setUserData","useEffect","key","Authorization","getUserData","App","exact","path","length","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e590513c.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\n\nimport \"./Auth.css\";\nimport { signIn } from \"../../requests/request\";\n\ninterface AuthProps {\n    signIn: (arg0: (a: string) => void, b: object) => void;\n    authKey: string;\n    setAuthKey: (a: string) => void;\n}\n\nconst Auth: React.FC<AuthProps> = ({ signIn, authKey, setAuthKey }) => {\n    const validate = yup.object().shape({\n        email: yup\n            .string()\n            .matches(\n                /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n                \"invalid email\",\n            ),\n        password: yup.string().min(4),\n    });\n\n    const checkUser = (email: string, password: string): void => {\n        signIn(setAuthKey, {\n            clientId: 1,\n            email: email,\n            password: password,\n        });\n    };\n\n    return (\n        <div>\n            no logged\n            <div>\n                {authKey === \"no-token\" && (\n                    <div className=\"error\">\n                        <p>user is not registered, please try again</p>\n                    </div>\n                )}\n                <Formik\n                    initialValues={{\n                        email: \"\",\n                        password: \"\",\n                    }}\n                    onSubmit={(values) => {\n                        checkUser(values.email, values.password);\n                        setTimeout(() => {\n                            values.email = \"\";\n                            values.password = \"\";\n                        }, 1000);\n                    }}\n                    validationSchema={validate}>\n                    {({\n                        values,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleBlur,\n                        isValid,\n                        handleSubmit,\n                        dirty,\n                    }) => (\n                        <div>\n                            <div>\n                                <input\n                                    name=\"email\"\n                                    type=\"email\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.email}\n                                    placeholder=\"Enter your email\"\n                                />\n                                <div className=\"error\">\n                                    {touched.email && errors.email && (\n                                        <p>{errors.email}</p>\n                                    )}\n                                </div>\n                            </div>\n                            <div>\n                                <input\n                                    name=\"password\"\n                                    type={\"password\"}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.password}\n                                    placeholder=\"Enter your password\"\n                                />\n                                <div className=\"error\">\n                                    {touched.password && errors.password && (\n                                        <p>{errors.password}</p>\n                                    )}\n                                </div>\n                            </div>\n                            <div>\n                                <button\n                                    type=\"submit\"\n                                    disabled={!isValid || !dirty}\n                                    onClick={() =>\n                                        checkUser(values.email, values.password)\n                                    }>\n                                    Sign In\n                                </button>\n                            </div>\n                        </div>\n                    )}\n                </Formik>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;\n","function signIn(setKey: (a: string) => void, bodyOption: any): void {\n    fetch(\"https://tager.dev.ozitag.com/api/auth/user\", {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n\n        body: JSON.stringify(bodyOption),\n    })\n        .then((response) => response.json())\n        .then((server) => {\n            if (server.data) {\n                setKey(`${server.data.tokenType} ${server.data.accessToken}`);\n            } else {\n                setKey(\"no-token\");\n            }\n        })\n        .catch((error) => console.log(error));\n}\n\nfunction getUserData(key: string, userData: (a: any) => void): void {\n    fetch(\"https://tager.dev.ozitag.com/api/tager/user/profile\", {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: key,\n        },\n    })\n        .then((response) => response.json())\n        .then((server) => userData(server.data))\n        .catch((error) => console.log(error));\n}\n\nfunction signOut(setKey: (a: string) => void): void {\n    setKey(\"\");\n}\nexport { signIn, getUserData, signOut };\n","import React, { useState, useEffect } from \"react\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { getUserData, signIn, signOut } from \"../../requests/request\";\n\ninterface LogProps {\n    signOut: (arg0: (a: string) => void) => void;\n    authKey: string;\n    setAuthKey: (a: string) => void;\n}\ninterface User {\n    id: number;\n    email: string;\n    name: string;\n}\n\nconst initUserData: User = {\n    id: 0,\n    email: \"\",\n    name: \"\",\n};\n\nconst Log: React.FC<LogProps> = ({ signOut, setAuthKey, authKey }) => {\n    const [userData, setUserData] = useState(initUserData);\n\n    useEffect(() => {\n        getUserData(authKey, setUserData);\n    }, [authKey]);\n\n    return (\n        <div>\n            {userData.name && (\n                <div>\n                    <div>id: {userData.id}</div>\n                    <div>email: {userData.email}</div>\n                    <div>name: {userData.name}</div>\n                    <div>\n                        <button onClick={() => signOut(setAuthKey)}>\n                            Sign out\n                        </button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Log;\n","import React, { useState } from \"react\";\nimport {\n    HashRouter as Router,\n    Redirect,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport Auth from \"../Auth\";\nimport Log from \"../Log/index\";\nimport { signIn, signOut } from \"../../requests/request\";\n\nimport \"./App.css\";\n\nfunction App() {\n    const [authKey, setAuthKey] = useState<string>(\"\");\n    return (\n        <Router>\n            <div className=\"App\">\n                <Switch>\n                    <Route exact path=\"/\">\n                        {authKey.length > 10 ? (\n                            <Redirect to=\"/LogIn\" />\n                        ) : (\n                            <Auth\n                                signIn={signIn}\n                                authKey={authKey}\n                                setAuthKey={setAuthKey}\n                            />\n                        )}\n                    </Route>\n                    <Route path=\"/LogIn\">\n                        {authKey.length < 10 ? (\n                            <Redirect to=\"/\" />\n                        ) : (\n                            <Log\n                                signOut={signOut}\n                                setAuthKey={setAuthKey}\n                                authKey={authKey}\n                            />\n                        )}\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/index';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}